
Uge 36 - Case Studies and Inception

Kapitel 3 :: Eksempler/cases

3.1 + 3.2
  - hovedfokus grundlogik, mindre fokus på andre lag i applicationen, meget
  lidt fokus på UI
  - vi lærer om det her itterativt så eksemplerne kommer igen op i bogen
  senere, når vi ved mere .
3.3
  - NextGen POS System (point of sale)
    - Hardware componenter (bar code scanner, computer)
    - 3. party tax calculator (interfacer)
    - Inventory control (interfacer)
  - Skal være robust, kunne tage imod salg selvom mangel på kontakt til fx inventory system.
    - Skal supportere mange forskellige interfaces;
    - Standard pc med touchskærm fx java swing
    - Thin web client, web interface
    - PDA interface, fx android måske
  - Skal kunne bruges af mange forskellige slags forretninger (flexibilitet)
    - fx tøjbutik vs computerbutik
3.4
  - Monopoly spil
  - meget anderledes end POS system men Object orienteret analyse og design stadig relevant
  - Skal køre som en simulering, mod en rigtig spiller.

Kapitel 4 :: Inception
  - Første fase.
  - 10% usecases analyseret.
  - klar til programmering i den efterfølgende, "elaboration" fase.
4.1 + 4.2
  - Er projektet realistisk, realiserbart
  - Burde vi købe software i stedet for at bygge det
  - Cost estimation
  - Skal vi gå videre med projektet?
  - Ret kort fase, analyse og codning foregår ikke her, men i elaboration.
4.3 + 4.4
  - Artifacts i inception fasen
    - fx. Proof of concept. (kan fx være noget )
    - Business case (de store linier, hvad er målene hvad er begrænsningerne)
    - iteration plan(første itteration)
    - Risk List / Risk management plan
    - Software dev. plan, lav præcision, godt overslag
4.5
    - Brug artifacts efter BEHOV!

Kapitel 5 :: Evolutionary Requirements
  // Ours is a world where people don't know what they want
  // and are willing to go through hell to get it.
  - Handler om det at sætte krav til programmet, og om hvor forkert det er
    at tro at man ved alt fra starten.
5.1
  - Krav er de egenskaber og betingelser som projektet og systemet skal
    tilpasse sig.
  - UP = best practices for at styre krav (manage requirements)
  - "a systematic approach to finding, documenting,
    organizing, and tracking the changing requirements of a system"
  - Bogen snakker om at man skal arbejde itterativt og arbejdsomt.
  - IKKE VÆRE DOVEN!!
5.2
  - UP: Change as a fundamental driver in projects
  - Programmering og testing starter tidligt og før mange krav er sat.
  - ADVARSEL: Sæt ikke alle krav fra start, det er waterfall modellen! SKIDT!
  - Mellemvej, mellem at definere alle krav først og at IKKE definere krav.
  - Definer få krav, waterfall model: 45% af alle krav ALDRIG brugt.
5.3
  - Hvilke gode måder er der på at FINDE (ikke opfinde) kravene?
  - Generelt er der teknikker der involverer kunden og udviklerne.
    - Usecases
    - Req. Workshops
    - Focus groups
    - Demo af hver itteration af programmet for kunder, for at få feedback.
5.4
  - FURPS+ Hvilke slags krav, i hvilke kategorier
    [Følgende, taget direkte fra bogen;]
    - Functional requirements
      - Features, capabilities, security.
    - Usability;
      - Human factors, help, documentation.
    - Reliability;
      - Frequency of failure, recoverability, predictability.
    - Performance;
      - Response times, throughput, accuracy, availability, resource usage.
    - Supportability;
      - Adaptability, maintainability, internationalization, configurability.
5.5 + 5.6 + 5.7
  - UP kravs artifacter:
    - Use-Case Model
    - Supplerende specification
      - "hvad der ikke kan findes i en usecase"
      - fx performance og licenser
      - features, man ikke helt kan eller vil beskrive i usecases
    - Opslagsliste (glossary)
      - Data dictionary
      - Attributter af et objekt
      - Acceptable krav
    - Vision
      - Ikke at forveklse med virksomheds mission'
      - For at få et overblik for projektets store idéer
    - Business Rules
      - Generelle regler for en business (fx Skat har skatte regler)
      - Kan genbruges på flere projekter
  - Alle artefacter kan være i hvilket som helst format,
    (plakater, documenter etc.)
  - Usecases er mest brugt af forrigt omtalte artifakter
  - Bogen fokuserer mest på disse.
